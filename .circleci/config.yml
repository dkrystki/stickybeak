defaults: &defaults
  working_directory: /srv
  docker:
    - image: circleci/python:3.7
      environment:
        PIPENV_VENV_IN_PROJECT: true
        DJANGO_SRV_HOSTNAME: localhost:8000
        FLASK_SRV_HOST: localhost
        FLASK_SRV_PORT: 5000

install_packages: &install_packages
  run:
    name: Install developer packages
    command: |
      sudo pip install pipenv
      pipenv install -d
      pipenv run python setup.py clean

restore_cache: &restore_cache
  restore_cache:
    name: "Restore cache"
    key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

version: 2.1
orbs:
  codecov: codecov/codecov@1.0.5
jobs:
  test-lib:
    <<: *defaults
    steps:
      - run:
          name: Init
          command: sudo chown circleci:circleci /srv
      - checkout
      - *install_packages
      - *restore_cache

      - run:
          name: Install and run django_srv
          command: |
            ./tests/django_srv/bin/ci/install
            ./tests/django_srv/bin/ci/start
          background: true
      - run:
          name: Install and run flask_srv
          command: |
            ./tests/flask_srv/bin/ci/install
            ./tests/flask_srv/bin/ci/start
          background: true
      - run:
          name: Wait for services
          command: ./bin/cont/wait_for_services.py
      - run:
          name: Run tests
          command: ./bin/cont/test
      - codecov/upload
      - run:
          name: Run mypy
          command: ./bin/cont/mypy
      - run:
          name: Run rstcheck
          command: ./bin/cont/rstcheck

      - store_artifacts:
          path: test-results
          destination: artifacts
      - store_test_results:
          path: test-results

  publish:
    <<: *defaults
    steps:
      - checkout
      - *restore_cache
      - *install_packages
      - run:
          name: Build a package
          command: ./bin/cont/build
      - run:
          name: Publish the package
          command: ./bin/cont/publish

workflows:
  version: 2
  test-deploy:
    jobs:
      - test-lib:
          filters:
            tags:
                only: /.*/
      - publish:
          requires:
            - test-lib
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]+(\.[0-9]+)*$/

